// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"market/internal/svc"

	"github.com/tal-tech/go-zero/rest"
)

func RegisterHandlers(engine *rest.Server, serverCtx *svc.ServiceContext) {
	engine.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/drops",
				Handler: NFTDropsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/drops/:id",
				Handler: getNFTDropsInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/nft-sales",
				Handler: NFTSalesListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/nft-sales/:id",
				Handler: getNFTSalesInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/artworks/:id",
				Handler: getArtworkInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/categories",
				Handler: getCategoriesHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/sale-addresses/:code",
				Handler: getSaleContractHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/token-ids",
				Handler: getNFTTokenHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/artworks",
				Handler: ArtworkListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/mynft",
				Handler: getMyNftHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/marketTradingInfo",
				Handler: NFTMarketTradingInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/sync-nft-list",
				Handler: getSyncNFTListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sync-nft",
				Handler: syncNFTHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/token-ids-name",
				Handler: getNFTTokenByNameHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sync721WithoutTokenId",
				Handler: sync721WithoutTokenIdHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/users/:address/histories",
				Handler: historyHandler(serverCtx),
			},
		},
	)
}
