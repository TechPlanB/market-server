// Code generated by goctl. DO NOT EDIT.
package types

import "github.com/shopspring/decimal"

type HistoryReq struct {
	PageNo   int    `form:"pageNo,optional,default=1"`
	PageSize int    `form:"pageSize,optional,default=10"`
	Type     string `form:"type,optional,options=sell|buy"`
	Address  string `path:"address"`
}

type HistoryResponse struct {
	Total int64         `json:"total"`
	Code  int           `json:"code"`
	Msg   string        `json:"msg"`
	List  []HistoryBody `json:"list"`
}

type HistoryBody struct {
	Id         int64   `json:"id"`
	NftTokenId int64   `json:"nft_token_id"`
	Amount     float64 `json:"amount"`
	Type       string  `json:"type"`
	Count      int64   `json:"count"`
	Time       int64   `json:"time"`
	Hash       string  `json:"hash"`
	TokenName  string  `json:"token_name"`
}

type NFTDropsReq struct {
	PageNo   int    `form:"pageNo,optional,default=1"`
	PageSize int    `form:"pageSize,optional,default=10"`
	Category int    `form:"category,optional"`
	Name     string `form:"name,optional"`
	SortBy   string `form:"sortBy,optional,options=created_at|price,default=created_at"`
	Order    string `form:"order,optional,options=asc|desc,default=asc"`
}

type NFTDropsBody struct {
	ID        int64   `json:"id"`
	Name      string  `json:"name"`
	ImageUrl  string  `json:"image_url"`
	Count     int64   `json:"count"`
	Price     float64 `json:"price"`
	StartTime int64   `json:"start_time"`
	EndTime   int64   `json:"end_time"`
	Status    string  `json:"status"`
}

type NFTDropsResponse struct {
	Total int64          `json:"total"`
	Code  int            `json:"code"`
	Msg   string         `json:"msg"`
	List  []NFTDropsBody `json:"list"`
}

type NFTDropsInfoReq struct {
	ID int64 `path:"id"`
}

type NFTDropsInfoBody struct {
	ID             int64   `json:"id"`
	Name           string  `json:"name"`
	Description    string  `json:"description"`
	CreatedAt      string  `json:"created_at"`
	CategoryName   string  `json:"category_name"`
	CollectionName string  `json:"collection_name"`
	ImageUrl       string  `json:"image_url"`
	Count          int64   `json:"count"`
	Price          float64 `json:"price"`
	BuyAddress     string  `json:"buy_address"`
	IdInContract   int64   `json:"id_in_contract"`
	NeedCheck      int64   `json:"need_check"`
	ShowLeft       int64   `json:"show_left"`
	StartTime      int64   `json:"start_time"`
	EndTime        int64   `json:"end_time"`
	Status         string  `json:"status"`
	NftAddress     string  `json:"nft_address"`
}

type NFTDropsInfoResponse struct {
	Data NFTDropsInfoBody `json:"data"`
	Code int32            `json:"code"`
	Msg  string           `json:"msg"`
}

type NFTSalesReq struct {
	PageNo    int    `form:"pageNo,optional,default=1"`
	PageSize  int    `form:"pageSize,optional,default=10"`
	SaleType  string `form:"saleType,optional,options=fixed_price|auction,default=fixed_price"`
	Category  int    `form:"category,optional"`
	TokenType int    `form:"tokenType,optional,default=1"`
	Name      string `form:"name,optional"`
	SortBy    string `form:"sortBy,optional,options=created_at|fixed_price|single_price,default=created_at"`
	Order     string `form:"order,optional,options=asc|desc,default=asc"`
}

type NFTSalesBody struct {
	ID           int64           `json:"id"`
	Name         string          `json:"name"`
	ImageUrl     string          `json:"image_url"`
	Count        int64           `json:"count"`
	FixedPrice   decimal.Decimal `json:"fixed_price"`
	HighestPrice decimal.Decimal `json:"highest_price"`
	StartTime    int64           `json:"start_time"`
	EndTime      int64           `json:"end_time"`
	Status       string          `json:"status"`
	SaleType     string          `json:"sale_type"`
	TokenId      string          `json:"token_id"`
	SaleAddress  string          `json:"sale_address"`
}

type NFTSalesResponse struct {
	Total int64          `json:"total"`
	Code  int            `json:"code"`
	Msg   string         `json:"msg"`
	List  []NFTSalesBody `json:"list"`
}

type NFTSalesInfoReq struct {
	ID int64 `path:"id"`
}

type NFTSalesInfoBody struct {
	ID             int64           `json:"id"`
	Name           string          `json:"name"`
	Description    string          `json:"description"`
	CreatedAt      string          `json:"created_at"`
	CategoryName   string          `json:"category_name"`
	CollectionName string          `json:"collection_name"`
	ImageUrl       string          `json:"image_url"`
	Count          int64           `json:"count"`
	FixedPrice     decimal.Decimal `json:"fixed_price"`
	TotalPrice     decimal.Decimal `json:"total_price"`
	HighestPrice   decimal.Decimal `json:"highest_price"`
	SaleAddress    string          `json:"sale_address"`
	SaleType       string          `json:"saleType"`
	IdInContract   string          `json:"id_in_contract"`
	TokenId        int64           `json:"token_id"`
	TokenStandard  string          `json:"token_standard"`
	TokenType      int64           `json:"token_type"`
	Owner          string          `json:"owner"`
	NftAddress     string          `json:"nft_address"`
	BlockChain     string          `json:"block_chain"`
	ProtocolFee    decimal.Decimal `json:"protocol_fee"`
	NeedCheck      int64           `json:"need_check"`
	ShowLeft       int64           `json:"show_left"`
	StartTime      int64           `json:"start_time"`
	EndTime        int64           `json:"end_time"`
	Status         string          `json:"status"`
	Properties     []Property      `json:"properties"`
}

type Property struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type NFTSalesInfoResponse struct {
	Data NFTSalesInfoBody `json:"data"`
	Code int32            `json:"code"`
	Msg  string           `json:"msg"`
}

type ArtworkListReq struct {
	PageNo   int    `form:"pageNo,optional,default=1"`
	PageSize int    `form:"pageSize,optional,default=10"`
	Status   string `form:"status,options=on_sale|not_on_sale,default=on_sale"`
	Category int    `form:"category,optional"`
	Address  string `form:"address"`
}

type ArtworkListBody struct {
	ID            int64   `json:"id"`
	Name          string  `json:"name"`
	Count         int64   `json:"count"`
	FixedPrice    float64 `json:"fixed_price"`
	HighestPrice  float64 `json:"highest_price"`
	TokenID       int64   `json:"token_id"`
	ImageUrl      string  `json:"image_url"`
	TokenStandard string  `json:"token_standard"`
	NftAddress    string  `json:"nft_address"`
	IdInContract  string  `json:"id_in_contract"`
	SaleAddress   string  `json:"sale_address"`
}

type ArtworkListResponse struct {
	Total int64             `json:"total"`
	Code  int               `json:"code"`
	Msg   string            `json:"msg"`
	List  []ArtworkListBody `json:"list"`
}

type ArtworkInfoReq struct {
	ID           int64  `path:"id"`
	IdInContract string `form:"id_in_contract,optional"`
}

type GetMyNftReq struct {
	ContractAddress string `form:"contract_address,optional"`
	TokenId         int64  `form:"token_id,optional"`
}

type ArtworkInfoBody struct {
	ID             int64      `json:"id"`
	Name           string     `json:"name"`
	Description    string     `json:"description"`
	CreatedAt      string     `json:"created_at"`
	CategoryName   string     `json:"category_name"`
	CollectionName string     `json:"collection_name"`
	Count          int64      `json:"count"`
	TokenId        int64      `json:"token_id"`
	TokenStandard  string     `json:"token_standard"`
	TokenType      int64      `json:"token_type"`
	Owner          string     `json:"owner"`
	BlindBox       bool       `json:"blind_box"`
	NftAddress     string     `json:"nft_address"`
	BlockChain     string     `json:"block_chain"`
	ProtocolFee    float64    `json:"protocol_fee"`
	FixedPrice     float64    `json:"fixed_price"`
	TotalPrice     float64    `json:"total_price"`
	Properties     []Property `json:"properties"`
	Status         string     `json:"status"`
	ImageUrl       string     `json:"image_url"`
	IdInContract   string     `json:"id_in_contract"`
	SaleAddress    string     `json:"sale_address"`
}

type MyNftBody struct {
	Name        string `json:"name"`
	Description string `json:"description"`
	ImageUrl    string `json:"image_url"`
}

type ArtworkInfoResponse struct {
	Data ArtworkInfoBody `json:"data"`
	Code int32           `json:"code"`
	Msg  string          `json:"msg"`
}

type MyNftResponse struct {
	Data MyNftBody `json:"data"`
	Code int32     `json:"code"`
	Msg  string    `json:"msg"`
}

type CategoryListBody struct {
	Code string `json:"code"`
	Name string `json:"name"`
	Id   int64  `json:"id"`
}

type CategoryListResponse struct {
	Code int                `json:"code"`
	Msg  string             `json:"msg"`
	List []CategoryListBody `json:"list"`
}

type SaleContractReq struct {
	Code string `json:"code"`
}

type SaleContractInfoBody struct {
	Code            string `json:"code"`
	ContractAddress string `json:"contract_address"`
}

type SaleContractInfoResponse struct {
	Code int                  `json:"code"`
	Msg  string               `json:"msg"`
	Data SaleContractInfoBody `json:"data"`
}

type NFTTokenIdsReq struct {
	Owner    string `form:"owner"`
	Contract string `form:"contract"`
}

type NFTTokenIdsResponse struct {
	Result []int  `json:"result"`
	Code   int32  `json:"code"`
	Msg    string `json:"msg"`
}

type NFTTokenIdsByNameReq struct {
	Owner    string `form:"owner"`
	Contract string `form:"contract"`
	Name     string `form:"name"`
}

type NFTTokenIdsByNameResponse struct {
	Result []int  `json:"result"`
	Code   int32  `json:"code"`
	Msg    string `json:"msg"`
}

type NFTSalesStatisticsInfoReq struct {
	StartTime string `form:"start_time"`
	EndTime   string `form:"end_time"`
}

type NFTOnSalesStatisticsResponse struct {
	Code             int32           `json:"code"`
	Msg              string          `json:"msg"`
	PendingOrdersNum int64           `json:"pendingOrdersNum"`
	OnSalesNFTNum    int64           `json:"onSalesNFTNum"`
	OnSalesRaacNum   int64           `json:"onSalesRaacNum"`
	ProportionList   []NTFProportion `json:"proportionlist"`
}

type NTFProportion struct {
	Name       string `json:"naem"`
	CntractNum int64  `json:"cntractNum"`
	NtfNum     int64  `json:"ntfNum"`
}

type SyncNFTListBody struct {
	Name            string `json:"name"`
	ContractAddress string `json:"contract_address"`
	Id              int64  `json:"id"`
}

type SyncNFTListResponse struct {
	Code int               `json:"code"`
	Msg  string            `json:"msg"`
	List []SyncNFTListBody `json:"list"`
}

type SyncNFTReq struct {
	ContractAddress string `json:"contract_address"`
	TokenId         int64  `json:"token_id"`
	UserAddress     string `json:"user_address"`
}

type SyncNFTResponse struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
}

type Sync721WithoutTokenIdReq struct {
	ContractAddress string `json:"contract_address"`
	UserAddress     string `json:"user_address"`
}
